// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserApiDbClient.DbContext;

#nullable disable

namespace userApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220506120645_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("userApi.Entities.ClaimEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Claims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "For Admin",
                            Name = "Admin Role"
                        },
                        new
                        {
                            Id = 2,
                            Description = "For Editor",
                            Name = "Editor Role"
                        },
                        new
                        {
                            Id = 3,
                            Description = "For User",
                            Name = "User Role"
                        });
                });

            modelBuilder.Entity("userApi.Entities.UserClaimEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ClaimId");

                    b.HasIndex("ClaimId");

                    b.ToTable("UserClaimEntity");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            ClaimId = 1,
                            Id = 1
                        },
                        new
                        {
                            UserId = 2,
                            ClaimId = 2,
                            Id = 2
                        },
                        new
                        {
                            UserId = 3,
                            ClaimId = 3,
                            Id = 3
                        });
                });

            modelBuilder.Entity("userApi.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2022, 5, 6, 15, 6, 45, 212, DateTimeKind.Local).AddTicks(4288),
                            Email = "admin@test.com",
                            FirstName = "testFirst",
                            LastName = "testLast",
                            PasswordHash = "$2a$11$YrnaAUDjx4TkwciU/d/JP.wOls9EFNicOqSE79M5FDa9dYM6YkGNi",
                            UpdateDate = new DateTime(2022, 5, 6, 15, 6, 45, 212, DateTimeKind.Local).AddTicks(4295)
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2022, 5, 6, 15, 6, 45, 343, DateTimeKind.Local).AddTicks(5242),
                            Email = "editor@test.com",
                            FirstName = "testFirst",
                            LastName = "testLast",
                            PasswordHash = "$2a$11$RjqZ2TGOYk1Ub.tOobkVmeTzjQOFYs448FiO/n5E0PS0pHWOfuxuG",
                            UpdateDate = new DateTime(2022, 5, 6, 15, 6, 45, 343, DateTimeKind.Local).AddTicks(5253)
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2022, 5, 6, 15, 6, 45, 473, DateTimeKind.Local).AddTicks(4918),
                            Email = "user@test.com",
                            FirstName = "testFirst",
                            LastName = "testLast",
                            PasswordHash = "$2a$11$/vMfrmY8KbNg4WjYtiXFju1atAJwt.b7mdRzcqExEzPUoaiCQmaDi",
                            UpdateDate = new DateTime(2022, 5, 6, 15, 6, 45, 473, DateTimeKind.Local).AddTicks(4928)
                        });
                });

            modelBuilder.Entity("userApi.Entities.UserClaimEntity", b =>
                {
                    b.HasOne("userApi.Entities.ClaimEntity", "Claim")
                        .WithMany("UserClaim")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("userApi.Entities.UserEntity", "User")
                        .WithMany("UserClaim")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("userApi.Entities.ClaimEntity", b =>
                {
                    b.Navigation("UserClaim");
                });

            modelBuilder.Entity("userApi.Entities.UserEntity", b =>
                {
                    b.Navigation("UserClaim");
                });
#pragma warning restore 612, 618
        }
    }
}
